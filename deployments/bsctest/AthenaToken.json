{
  "address": "0x0B5ba56d44d958C6E2dD613b0e38E93Dec4Bc98e",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousPendingOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "ChangePendingOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        }
      ],
      "name": "MinterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSwapPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldSwapPool",
          "type": "address"
        }
      ],
      "name": "SwapPoolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isWhitelist",
          "type": "bool"
        }
      ],
      "name": "WhitelistChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TOTAL_BURN",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TOTAL_MINT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxAmount",
          "type": "uint256"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addToken",
          "type": "address"
        }
      ],
      "name": "addWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "delMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delToken",
          "type": "address"
        }
      ],
      "name": "delWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getFeeOrBurnTransferAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeOrBurnAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingOwner_",
          "type": "address"
        }
      ],
      "name": "setPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_swapPool",
          "type": "address"
        }
      ],
      "name": "setSwapPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurnAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5553f8c13ae331e3b59201d79cde3bd664fb032fd0cf4a0af7d37acec697132c",
  "receipt": {
    "to": null,
    "from": "0x218e59Feb135A21F8BA26A6F5F6A3C7868a3ab31",
    "contractAddress": "0x0B5ba56d44d958C6E2dD613b0e38E93Dec4Bc98e",
    "transactionIndex": 13,
    "gasUsed": "1791220",
    "logsBloom": "0x
    "blockHash": "0xad25888fe54d7dc3ee1333cf967736bb013e41ca9f96a57cb3be605d5c8beac7",
    "transactionHash": "0x5553f8c13ae331e3b59201d79cde3bd664fb032fd0cf4a0af7d37acec697132c",
    "logs": [
      {
        "transactionIndex": 13,
        "blockNumber": 15134537,
        "transactionHash": "0x5553f8c13ae331e3b59201d79cde3bd664fb032fd0cf4a0af7d37acec697132c",
        "address": "0x0B5ba56d44d958C6E2dD613b0e38E93Dec4Bc98e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000218e59feb135a21f8ba26a6f5f6a3c7868a3ab31"
        ],
        "data": "0x",
        "logIndex": 38,
        "blockHash": "0xad25888fe54d7dc3ee1333cf967736bb013e41ca9f96a57cb3be605d5c8beac7"
      },
      {
        "transactionIndex": 13,
        "blockNumber": 15134537,
        "transactionHash": "0x5553f8c13ae331e3b59201d79cde3bd664fb032fd0cf4a0af7d37acec697132c",
        "address": "0x0B5ba56d44d958C6E2dD613b0e38E93Dec4Bc98e",
        "topics": [
          "0xd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb1687",
          "0x000000000000000000000000218e59feb135a21f8ba26a6f5f6a3c7868a3ab31"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 39,
        "blockHash": "0xad25888fe54d7dc3ee1333cf967736bb013e41ca9f96a57cb3be605d5c8beac7"
      }
    ],
    "blockNumber": 15134537,
    "cumulativeGasUsed": "4860435",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "790cd55fe47189e24489881ed9499d92",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousPendingOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"ChangePendingOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"MinterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSwapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldSwapPool\",\"type\":\"address\"}],\"name\":\"SwapPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isWhitelist\",\"type\":\"bool\"}],\"name\":\"WhitelistChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_BURN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TOTAL_MINT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addToken\",\"type\":\"address\"}],\"name\":\"addWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"delMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delToken\",\"type\":\"address\"}],\"name\":\"delWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getFeeOrBurnTransferAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeOrBurnAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapPool\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurnAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/AthenaToken.sol\":\"AthenaToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow, so we distribute\\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\\n    }\\n}\\n\",\"keccak256\":\"0x363bd3b45201f07c9b71c2edc96533468cf14a3d029fabd82fddceb1eb3ebd9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    using SafeMath for uint256;\\n\\n    uint256 private _cap;\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor (uint256 cap_) internal {\\n        require(cap_ > 0, \\\"ERC20Capped: cap is 0\\\");\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - minted tokens must not cause the total supply to go over the cap.\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        if (from == address(0)) { // When minting tokens\\n            require(totalSupply().add(amount) <= cap(), \\\"ERC20Capped: cap exceeded\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x94e4d02b80450cf26bec54be6c0cf52fe4e8ce91dfc6e97794dce19ded2a3fa4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/core/SafeOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport '@openzeppelin/contracts/utils/Context.sol';\\n\\n/**\\n * This is a contract copied from 'Ownable.sol'\\n * It has the same fundation of Ownable, besides it accept pendingOwner for mor Safe Use\\n */\\nabstract contract SafeOwnable is Context {\\n    address private _owner;\\n    address private _pendingOwner;\\n\\n    event ChangePendingOwner(address indexed previousPendingOwner, address indexed newPendingOwner);\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    constructor (address _ownerAddress) {\\n        if (_ownerAddress == address(0)) {\\n            _ownerAddress = _msgSender();\\n        }\\n        _owner = _ownerAddress;\\n        emit OwnershipTransferred(address(0), _ownerAddress);\\n    }\\n\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier onlyPendingOwner() {\\n        require(pendingOwner() == _msgSender(), \\\"Ownable: caller is not the pendingOwner\\\");\\n        _;\\n    }\\n\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n        if (_pendingOwner != address(0)) {\\n            emit ChangePendingOwner(_pendingOwner, address(0));\\n            _pendingOwner = address(0);\\n        }\\n    }\\n\\n    function setPendingOwner(address pendingOwner_) public virtual onlyOwner {\\n        require(pendingOwner_ != address(0), \\\"Ownable: pendingOwner is the zero address\\\");\\n        emit ChangePendingOwner(_pendingOwner, pendingOwner_);\\n        _pendingOwner = pendingOwner_;\\n    }\\n\\n    function acceptOwner() public virtual onlyPendingOwner {\\n        emit OwnershipTransferred(_owner, _pendingOwner);\\n        _owner = _pendingOwner;\\n        emit ChangePendingOwner(_pendingOwner, address(0));\\n        _pendingOwner = address(0);\\n    }\\n}\\n\",\"keccak256\":\"0xdd848475335bbc780d4aa2309c5e8c927b70f68bdcb15bd6627d1593fa3538ac\",\"license\":\"MIT\"},\"contracts/token/AthenaToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.7.6;\\n\\nimport '@openzeppelin/contracts/token/ERC20/ERC20Capped.sol';\\nimport '@openzeppelin/contracts/math/Math.sol';\\n\\nimport '../core/SafeOwnable.sol';\\n\\ncontract AthenaToken is ERC20Capped, SafeOwnable {\\n    using SafeMath for uint256;\\n\\n    event MinterChanged(address indexed minter, uint maxAmount);\\n    event SwapPoolChanged(address indexed newSwapPool, address oldSwapPool);\\n    event WhitelistChanged(address indexed token, bool isWhitelist);\\n\\n    uint256 public constant MAX_TOTAL_MINT = 512 * 10 ** 6 * 10 ** 18; // Total 0.512B\\n    uint256 public constant MAX_TOTAL_BURN = 256 * 10 ** 6 * 10 ** 18; // Total's 50%\\n    address public constant BURN_ADDRESS = 0x000000000000000000000000000000000000dEaD; // burnd address\\n    uint256 public totalBurnAmount; // Current cumulative total destroyed\\n    address public swapPool; // Liquidity pool address\\n\\n    mapping(address => uint) public minters;\\n    mapping(address => bool) public whitelist;\\n\\n    constructor() ERC20Capped(MAX_TOTAL_MINT) ERC20(\\\"Athena Token\\\", \\\"atna\\\") SafeOwnable(msg.sender) {\\n        addMinter(msg.sender, uint(-1));\\n    }\\n\\n    function setSwapPool(address _swapPool) external onlyOwner {\\n        require(_swapPool != address(0), \\\"illegal pool address\\\");\\n        address oldSwapPool = swapPool;\\n        swapPool = _swapPool;\\n        emit SwapPoolChanged(swapPool,oldSwapPool);\\n    }\\n\\n    function addMinter(address _minter, uint _maxAmount) public onlyOwner {\\n        require(_minter != address(0), \\\"illegal minter\\\");\\n        require(minters[_minter] == 0, \\\"already minter\\\");\\n        require(_maxAmount > 0, \\\"amount is zero\\\");\\n        minters[_minter] = _maxAmount;\\n        emit MinterChanged(_minter, _maxAmount);\\n    }\\n\\n    function delMinter(address _minter) external onlyOwner {\\n        require(_minter != address(0), \\\"illegal minter\\\");\\n        require(minters[_minter] > 0, \\\"not minter\\\");\\n        delete minters[_minter];\\n        emit MinterChanged(_minter, 0);\\n    }\\n\\n    // tokens in the whitelist without fee\\n    function addWhitelist(address _addToken) external onlyOwner {\\n        require(_addToken != address(0), \\\"token is the zero address\\\");\\n        whitelist[_addToken] = true;\\n        emit WhitelistChanged(_addToken, true);\\n    }\\n\\n    function delWhitelist(address _delToken) external onlyOwner {\\n        require(_delToken != address(0), \\\"token is the zero address\\\");\\n        delete whitelist[_delToken];\\n        emit WhitelistChanged(_delToken, false);\\n    }\\n\\n    modifier onlyMinter(uint _amount) {\\n        require(minters[msg.sender] >= _amount, \\\"caller is not minter or not enough\\\");\\n        _;\\n    }\\n\\n    function mint(address to, uint256 amount) external onlyMinter(amount) returns (uint) {\\n        minters[msg.sender] = minters[msg.sender].sub(amount);\\n        _mint(to, amount);\\n        return amount; \\n    }\\n    function getFeeOrBurnTransferAmount(address sender,address recipient,uint256 amount) public view returns(uint256 burnAmount,uint256 feeOrBurnAmount) {\\n        \\n        if (whitelist[sender] || whitelist[recipient]) {\\n            return (0, 0);\\n        }\\n        // transfer fee\\n        feeOrBurnAmount = amount.div(100); // 1 %\\n        // check total burn\\n        if (MAX_TOTAL_BURN <= totalBurnAmount) {\\n            burnAmount = 0;\\n        } else if (MAX_TOTAL_BURN <= totalBurnAmount.add(feeOrBurnAmount)) {\\n            burnAmount = MAX_TOTAL_BURN.sub(totalBurnAmount);\\n        } else {\\n            burnAmount = feeOrBurnAmount;\\n        }\\n    }\\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\\n        require(msg.sender != recipient, \\\"recipient address is self\\\");\\n        (uint256 burnAmount, uint256 feeAmount) = getFeeOrBurnTransferAmount(msg.sender,recipient,amount);\\n        if (burnAmount > 0) {\\n            totalBurnAmount = totalBurnAmount.add(burnAmount);\\n            amount = amount.sub(burnAmount);\\n            _transfer(msg.sender,BURN_ADDRESS,burnAmount);\\n        }\\n        if(swapPool != address(0) && feeAmount > 0) {\\n            amount = amount.sub(feeAmount);\\n            _transfer(msg.sender,swapPool,feeAmount);\\n        }\\n        if (amount > 0){\\n            _transfer(msg.sender,recipient,amount);\\n        }\\n        return true;\\n    }        \\n\\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\\n        require(sender != recipient, \\\"recipient address is sender\\\");\\n        // uint256 approveAmount = amount;\\n        _approve(sender, msg.sender, allowance(sender,msg.sender).sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        (uint256 burnAmount, uint256 feeAmount) = getFeeOrBurnTransferAmount(sender,recipient,amount);\\n        if (burnAmount > 0) {\\n            totalBurnAmount = totalBurnAmount.add(burnAmount);\\n            amount = amount.sub(burnAmount);\\n            _transfer(sender,BURN_ADDRESS,burnAmount);\\n        }\\n        if(swapPool != address(0) && feeAmount > 0) {\\n            amount = amount.sub(feeAmount);\\n            _transfer(sender,swapPool,feeAmount);\\n        }\\n        if (amount > 0){\\n            _transfer(sender, recipient, amount);\\n        }\\n        return true;\\n    }\\n    \\n}\\n\",\"keccak256\":\"0xdc27e6ed0f0c199bd97a39da8b8b2ae74d3df33f6e7fd780631e0c9c4b30431f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604080518082018252600c81526b20ba3432b730902a37b5b2b760a11b60208083019182528351808501909452600484526361746e6160e01b90840152815133936b01a784379d99db420000000093929091620000729160039162000339565b5080516200008890600490602084019062000339565b50506005805460ff191660121790555080620000eb576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b6006556001600160a01b0381166200010a576200010762000168565b90505b600780546001600160a01b0319166001600160a01b0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000162336000196200016c565b620003e5565b3390565b6200017662000168565b6001600160a01b0316620001896200032a565b6001600160a01b031614620001e5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03821662000232576040805162461bcd60e51b815260206004820152600e60248201526d34b63632b3b0b61036b4b73a32b960911b604482015290519081900360640190fd5b6001600160a01b0382166000908152600b6020526040902054156200028f576040805162461bcd60e51b815260206004820152600e60248201526d30b63932b0b23c9036b4b73a32b960911b604482015290519081900360640190fd5b60008111620002d6576040805162461bcd60e51b815260206004820152600e60248201526d616d6f756e74206973207a65726f60901b604482015290519081900360640190fd5b6001600160a01b0382166000818152600b6020908152604091829020849055815184815291517fd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb16879281900390910190a25050565b6007546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620003715760008555620003bc565b82601f106200038c57805160ff1916838001178555620003bc565b82800160010185558215620003bc579182015b82811115620003bc5782518255916020019190600101906200039f565b50620003ca929150620003ce565b5090565b5b80821115620003ca5760008155600101620003cf565b611cd380620003f56000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063cf9e8e69116100a2578063ebbc496511610071578063ebbc4965146105b8578063f46eccc4146105c0578063f80f5dd5146105e6578063fccc28131461060c576101e5565b8063cf9e8e6914610572578063dc29527a1461057a578063dd62ed3e14610582578063e30c3978146105b0576101e5565b80639b19251a116100de5780639b19251a146104ce578063a457c2d7146104f4578063a9059cbb14610520578063c42069ec1461054c576101e5565b80638da5cb5b1461047457806395d89b411461049857806397ecfaab146104a0578063982697dd146104c6576101e5565b8063355274ea1161018757806370a082311161015657806370a08231146103f457806370e0fbef1461041a578063715018a614610440578063761248b414610448576101e5565b8063355274ea1461038c578063395093511461039457806340c10f19146103c05780635a77e12a146103ec576101e5565b806318160ddd116101c357806318160ddd146102f657806323338b881461031057806323b872dd14610338578063313ce5671461036e576101e5565b806306fdde03146101ea578063095ea7b31461026757806314ac0b18146102a7575b600080fd5b6101f2610614565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356106aa565b604080519115158252519081900360200190f35b6102dd600480360360608110156102bd57600080fd5b506001600160a01b038135811691602081013590911690604001356106c7565b6040805192835260208301919091528051918290030190f35b6102fe61078c565b60408051918252519081900360200190f35b6103366004803603602081101561032657600080fd5b50356001600160a01b0316610792565b005b6102936004803603606081101561034e57600080fd5b506001600160a01b038135811691602081013590911690604001356108e8565b610376610a2c565b6040805160ff9092168252519081900360200190f35b6102fe610a35565b610293600480360360408110156103aa57600080fd5b506001600160a01b038135169060200135610a3b565b6102fe600480360360408110156103d657600080fd5b506001600160a01b038135169060200135610a89565b6102fe610b15565b6102fe6004803603602081101561040a57600080fd5b50356001600160a01b0316610b1b565b6103366004803603602081101561043057600080fd5b50356001600160a01b0316610b36565b610336610c4a565b6103366004803603604081101561045e57600080fd5b506001600160a01b038135169060200135610d50565b61047c610ef4565b604080516001600160a01b039092168252519081900360200190f35b6101f2610f03565b610336600480360360208110156104b657600080fd5b50356001600160a01b0316610f64565b61047c611073565b610293600480360360208110156104e457600080fd5b50356001600160a01b0316611082565b6102936004803603604081101561050a57600080fd5b506001600160a01b038135169060200135611097565b6102936004803603604081101561053657600080fd5b506001600160a01b0381351690602001356110ff565b6103366004803603602081101561056257600080fd5b50356001600160a01b0316611201565b6102fe611304565b6102fe611314565b6102fe6004803603604081101561059857600080fd5b506001600160a01b0381358116916020013516611323565b61047c61134e565b61033661135d565b6102fe600480360360208110156105d657600080fd5b50356001600160a01b0316611459565b610336600480360360208110156105fc57600080fd5b50356001600160a01b031661146b565b61047c611582565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b60006106be6106b7611588565b848461158c565b50600192915050565b6001600160a01b0383166000908152600c6020526040812054819060ff168061070857506001600160a01b0384166000908152600c602052604090205460ff165b1561071857506000905080610784565b610723836064611678565b90506009546ad3c21bcecceda100000000116107425760009150610784565b60095461074f90826116df565b6ad3c21bcecceda1000000001161078057600954610779906ad3c21bcecceda10000000090611740565b9150610784565b8091505b935093915050565b60025490565b61079a611588565b6001600160a01b03166107ab610ef4565b6001600160a01b0316146107f4576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116610840576040805162461bcd60e51b815260206004820152600e60248201526d34b63632b3b0b61036b4b73a32b960911b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b6020526040902054610897576040805162461bcd60e51b815260206004820152600a6024820152693737ba1036b4b73a32b960b11b604482015290519081900360640190fd5b6001600160a01b0381166000818152600b602090815260408083208390558051928352517fd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb16879281900390910190a250565b6000826001600160a01b0316846001600160a01b03161415610951576040805162461bcd60e51b815260206004820152601b60248201527f726563697069656e7420616464726573732069732073656e6465720000000000604482015290519081900360640190fd5b610989843361098485604051806060016040528060288152602001611b766028913961097d8a33611323565b919061179d565b61158c565b6000806109978686866106c7565b909250905081156109cb576009546109af90836116df565b6009556109bc8483611740565b93506109cb8661dead84611834565b600a546001600160a01b0316158015906109e55750600081115b15610a0f576109f48482611740565b600a54909450610a0f9087906001600160a01b031683611834565b8315610a2057610a20868686611834565b50600195945050505050565b60055460ff1690565b60065490565b60006106be610a48611588565b846109848560016000610a59611588565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906116df565b336000908152600b60205260408120548290811115610ad95760405162461bcd60e51b8152600401808060200182810382526022815260200180611bbe6022913960400191505060405180910390fd5b336000908152600b6020526040902054610af39084611740565b336000908152600b6020526040902055610b0d848461198f565b509092915050565b60095481565b6001600160a01b031660009081526020819052604090205490565b610b3e611588565b6001600160a01b0316610b4f610ef4565b6001600160a01b031614610b98576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116610bea576040805162461bcd60e51b8152602060048201526014602482015273696c6c6567616c20706f6f6c206164647265737360601b604482015290519081900360640190fd5b600a80546001600160a01b038381166001600160a01b0319831617928390556040805192821680845290519093909116917fd13e3e4fe833bcec857fc5051de922c0ed11b6f4d400bafe4c2b789d942c14ab919081900360200190a25050565b610c52611588565b6001600160a01b0316610c63610ef4565b6001600160a01b031614610cac576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b03191690556008546001600160a01b031615610d4e576008546040516000916001600160a01b0316907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f908390a3600880546001600160a01b03191690555b565b610d58611588565b6001600160a01b0316610d69610ef4565b6001600160a01b031614610db2576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038216610dfe576040805162461bcd60e51b815260206004820152600e60248201526d34b63632b3b0b61036b4b73a32b960911b604482015290519081900360640190fd5b6001600160a01b0382166000908152600b602052604090205415610e5a576040805162461bcd60e51b815260206004820152600e60248201526d30b63932b0b23c9036b4b73a32b960911b604482015290519081900360640190fd5b60008111610ea0576040805162461bcd60e51b815260206004820152600e60248201526d616d6f756e74206973207a65726f60901b604482015290519081900360640190fd5b6001600160a01b0382166000818152600b6020908152604091829020849055815184815291517fd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb16879281900390910190a25050565b6007546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a05780601f10610675576101008083540402835291602001916106a0565b610f6c611588565b6001600160a01b0316610f7d610ef4565b6001600160a01b031614610fc6576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b03811661101d576040805162461bcd60e51b8152602060048201526019602482015278746f6b656e20697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6001600160a01b0381166000818152600c60209081526040808320805460ff191690558051928352517fb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b9281900390910190a250565b600a546001600160a01b031681565b600c6020526000908152604090205460ff1681565b60006106be6110a4611588565b8461098485604051806060016040528060258152602001611c7960259139600160006110ce611588565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061179d565b6000336001600160a01b038416141561115f576040805162461bcd60e51b815260206004820152601960248201527f726563697069656e7420616464726573732069732073656c6600000000000000604482015290519081900360640190fd5b60008061116d3386866106c7565b909250905081156111a15760095461118590836116df565b6009556111928483611740565b93506111a13361dead84611834565b600a546001600160a01b0316158015906111bb5750600081115b156111e5576111ca8482611740565b600a549094506111e59033906001600160a01b031683611834565b83156111f6576111f6338686611834565b506001949350505050565b611209611588565b6001600160a01b031661121a610ef4565b6001600160a01b031614611263576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b0381166112a85760405162461bcd60e51b8152600401808060200182810382526029815260200180611c506029913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f90600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6b01a784379d99db420000000081565b6ad3c21bcecceda10000000081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031690565b611365611588565b6001600160a01b031661137661134e565b6001600160a01b0316146113bb5760405162461bcd60e51b8152600401808060200182810382526027815260200180611c056027913960400191505060405180910390fd5b6008546007546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600854600780546001600160a01b0319166001600160a01b039092169182179055604051600091907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f908390a3600880546001600160a01b0319169055565b600b6020526000908152604090205481565b611473611588565b6001600160a01b0316611484610ef4565b6001600160a01b0316146114cd576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116611524576040805162461bcd60e51b8152602060048201526019602482015278746f6b656e20697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff19166001908117909155825190815291517fb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b9281900390910190a250565b61dead81565b3390565b6001600160a01b0383166115d15760405162461bcd60e51b8152600401808060200182810382526024815260200180611c2c6024913960400191505060405180910390fd5b6001600160a01b0382166116165760405162461bcd60e51b8152600401808060200182810382526022815260200180611b2e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008082116116ce576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816116d757fe5b049392505050565b600082820183811015611739576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115611797576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000818484111561182c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117f15781810151838201526020016117d9565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166118795760405162461bcd60e51b8152600401808060200182810382526025815260200180611be06025913960400191505060405180910390fd5b6001600160a01b0382166118be5760405162461bcd60e51b8152600401808060200182810382526023815260200180611b0b6023913960400191505060405180910390fd5b6118c9838383611a7f565b61190681604051806060016040528060268152602001611b50602691396001600160a01b038616600090815260208190526040902054919061179d565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461193590826116df565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b0382166119ea576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6119f660008383611a7f565b600254611a0390826116df565b6002556001600160a01b038216600090815260208190526040902054611a2990826116df565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b611a8a838383611b05565b6001600160a01b038316611b0557611aa0610a35565b611ab282611aac61078c565b906116df565b1115611b05576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657263616c6c6572206973206e6f74206d696e746572206f72206e6f7420656e6f75676845524332303a207472616e736665722066726f6d20746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f74207468652070656e64696e674f776e657245524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a2070656e64696e674f776e657220697320746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122048e49fbb1266132af81025cdee0e9b6c629380e46f9d8fb357c4be6519e5a94264736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638da5cb5b1161010f578063cf9e8e69116100a2578063ebbc496511610071578063ebbc4965146105b8578063f46eccc4146105c0578063f80f5dd5146105e6578063fccc28131461060c576101e5565b8063cf9e8e6914610572578063dc29527a1461057a578063dd62ed3e14610582578063e30c3978146105b0576101e5565b80639b19251a116100de5780639b19251a146104ce578063a457c2d7146104f4578063a9059cbb14610520578063c42069ec1461054c576101e5565b80638da5cb5b1461047457806395d89b411461049857806397ecfaab146104a0578063982697dd146104c6576101e5565b8063355274ea1161018757806370a082311161015657806370a08231146103f457806370e0fbef1461041a578063715018a614610440578063761248b414610448576101e5565b8063355274ea1461038c578063395093511461039457806340c10f19146103c05780635a77e12a146103ec576101e5565b806318160ddd116101c357806318160ddd146102f657806323338b881461031057806323b872dd14610338578063313ce5671461036e576101e5565b806306fdde03146101ea578063095ea7b31461026757806314ac0b18146102a7575b600080fd5b6101f2610614565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561022c578181015183820152602001610214565b50505050905090810190601f1680156102595780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102936004803603604081101561027d57600080fd5b506001600160a01b0381351690602001356106aa565b604080519115158252519081900360200190f35b6102dd600480360360608110156102bd57600080fd5b506001600160a01b038135811691602081013590911690604001356106c7565b6040805192835260208301919091528051918290030190f35b6102fe61078c565b60408051918252519081900360200190f35b6103366004803603602081101561032657600080fd5b50356001600160a01b0316610792565b005b6102936004803603606081101561034e57600080fd5b506001600160a01b038135811691602081013590911690604001356108e8565b610376610a2c565b6040805160ff9092168252519081900360200190f35b6102fe610a35565b610293600480360360408110156103aa57600080fd5b506001600160a01b038135169060200135610a3b565b6102fe600480360360408110156103d657600080fd5b506001600160a01b038135169060200135610a89565b6102fe610b15565b6102fe6004803603602081101561040a57600080fd5b50356001600160a01b0316610b1b565b6103366004803603602081101561043057600080fd5b50356001600160a01b0316610b36565b610336610c4a565b6103366004803603604081101561045e57600080fd5b506001600160a01b038135169060200135610d50565b61047c610ef4565b604080516001600160a01b039092168252519081900360200190f35b6101f2610f03565b610336600480360360208110156104b657600080fd5b50356001600160a01b0316610f64565b61047c611073565b610293600480360360208110156104e457600080fd5b50356001600160a01b0316611082565b6102936004803603604081101561050a57600080fd5b506001600160a01b038135169060200135611097565b6102936004803603604081101561053657600080fd5b506001600160a01b0381351690602001356110ff565b6103366004803603602081101561056257600080fd5b50356001600160a01b0316611201565b6102fe611304565b6102fe611314565b6102fe6004803603604081101561059857600080fd5b506001600160a01b0381358116916020013516611323565b61047c61134e565b61033661135d565b6102fe600480360360208110156105d657600080fd5b50356001600160a01b0316611459565b610336600480360360208110156105fc57600080fd5b50356001600160a01b031661146b565b61047c611582565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a05780601f10610675576101008083540402835291602001916106a0565b820191906000526020600020905b81548152906001019060200180831161068357829003601f168201915b5050505050905090565b60006106be6106b7611588565b848461158c565b50600192915050565b6001600160a01b0383166000908152600c6020526040812054819060ff168061070857506001600160a01b0384166000908152600c602052604090205460ff165b1561071857506000905080610784565b610723836064611678565b90506009546ad3c21bcecceda100000000116107425760009150610784565b60095461074f90826116df565b6ad3c21bcecceda1000000001161078057600954610779906ad3c21bcecceda10000000090611740565b9150610784565b8091505b935093915050565b60025490565b61079a611588565b6001600160a01b03166107ab610ef4565b6001600160a01b0316146107f4576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116610840576040805162461bcd60e51b815260206004820152600e60248201526d34b63632b3b0b61036b4b73a32b960911b604482015290519081900360640190fd5b6001600160a01b0381166000908152600b6020526040902054610897576040805162461bcd60e51b815260206004820152600a6024820152693737ba1036b4b73a32b960b11b604482015290519081900360640190fd5b6001600160a01b0381166000818152600b602090815260408083208390558051928352517fd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb16879281900390910190a250565b6000826001600160a01b0316846001600160a01b03161415610951576040805162461bcd60e51b815260206004820152601b60248201527f726563697069656e7420616464726573732069732073656e6465720000000000604482015290519081900360640190fd5b610989843361098485604051806060016040528060288152602001611b766028913961097d8a33611323565b919061179d565b61158c565b6000806109978686866106c7565b909250905081156109cb576009546109af90836116df565b6009556109bc8483611740565b93506109cb8661dead84611834565b600a546001600160a01b0316158015906109e55750600081115b15610a0f576109f48482611740565b600a54909450610a0f9087906001600160a01b031683611834565b8315610a2057610a20868686611834565b50600195945050505050565b60055460ff1690565b60065490565b60006106be610a48611588565b846109848560016000610a59611588565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906116df565b336000908152600b60205260408120548290811115610ad95760405162461bcd60e51b8152600401808060200182810382526022815260200180611bbe6022913960400191505060405180910390fd5b336000908152600b6020526040902054610af39084611740565b336000908152600b6020526040902055610b0d848461198f565b509092915050565b60095481565b6001600160a01b031660009081526020819052604090205490565b610b3e611588565b6001600160a01b0316610b4f610ef4565b6001600160a01b031614610b98576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116610bea576040805162461bcd60e51b8152602060048201526014602482015273696c6c6567616c20706f6f6c206164647265737360601b604482015290519081900360640190fd5b600a80546001600160a01b038381166001600160a01b0319831617928390556040805192821680845290519093909116917fd13e3e4fe833bcec857fc5051de922c0ed11b6f4d400bafe4c2b789d942c14ab919081900360200190a25050565b610c52611588565b6001600160a01b0316610c63610ef4565b6001600160a01b031614610cac576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b03191690556008546001600160a01b031615610d4e576008546040516000916001600160a01b0316907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f908390a3600880546001600160a01b03191690555b565b610d58611588565b6001600160a01b0316610d69610ef4565b6001600160a01b031614610db2576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038216610dfe576040805162461bcd60e51b815260206004820152600e60248201526d34b63632b3b0b61036b4b73a32b960911b604482015290519081900360640190fd5b6001600160a01b0382166000908152600b602052604090205415610e5a576040805162461bcd60e51b815260206004820152600e60248201526d30b63932b0b23c9036b4b73a32b960911b604482015290519081900360640190fd5b60008111610ea0576040805162461bcd60e51b815260206004820152600e60248201526d616d6f756e74206973207a65726f60901b604482015290519081900360640190fd5b6001600160a01b0382166000818152600b6020908152604091829020849055815184815291517fd75fd184f209746726e627e2bd2ed917eeb5f5b35120d7e89e4df569e6bb16879281900390910190a25050565b6007546001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106a05780601f10610675576101008083540402835291602001916106a0565b610f6c611588565b6001600160a01b0316610f7d610ef4565b6001600160a01b031614610fc6576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b03811661101d576040805162461bcd60e51b8152602060048201526019602482015278746f6b656e20697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6001600160a01b0381166000818152600c60209081526040808320805460ff191690558051928352517fb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b9281900390910190a250565b600a546001600160a01b031681565b600c6020526000908152604090205460ff1681565b60006106be6110a4611588565b8461098485604051806060016040528060258152602001611c7960259139600160006110ce611588565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061179d565b6000336001600160a01b038416141561115f576040805162461bcd60e51b815260206004820152601960248201527f726563697069656e7420616464726573732069732073656c6600000000000000604482015290519081900360640190fd5b60008061116d3386866106c7565b909250905081156111a15760095461118590836116df565b6009556111928483611740565b93506111a13361dead84611834565b600a546001600160a01b0316158015906111bb5750600081115b156111e5576111ca8482611740565b600a549094506111e59033906001600160a01b031683611834565b83156111f6576111f6338686611834565b506001949350505050565b611209611588565b6001600160a01b031661121a610ef4565b6001600160a01b031614611263576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b0381166112a85760405162461bcd60e51b8152600401808060200182810382526029815260200180611c506029913960400191505060405180910390fd5b6008546040516001600160a01b038084169216907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f90600090a3600880546001600160a01b0319166001600160a01b0392909216919091179055565b6b01a784379d99db420000000081565b6ad3c21bcecceda10000000081565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6008546001600160a01b031690565b611365611588565b6001600160a01b031661137661134e565b6001600160a01b0316146113bb5760405162461bcd60e51b8152600401808060200182810382526027815260200180611c056027913960400191505060405180910390fd5b6008546007546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600854600780546001600160a01b0319166001600160a01b039092169182179055604051600091907f4465959e7ec1f32e3ebd831ac2459ad6ef4b1d54a83f108a7068e69e62f0702f908390a3600880546001600160a01b0319169055565b600b6020526000908152604090205481565b611473611588565b6001600160a01b0316611484610ef4565b6001600160a01b0316146114cd576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9e833981519152604482015290519081900360640190fd5b6001600160a01b038116611524576040805162461bcd60e51b8152602060048201526019602482015278746f6b656e20697320746865207a65726f206164647265737360381b604482015290519081900360640190fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff19166001908117909155825190815291517fb840a1dbd8b09a3dc45161bba92dfb9aba643c0e44c085a447f839d1d02cf13b9281900390910190a250565b61dead81565b3390565b6001600160a01b0383166115d15760405162461bcd60e51b8152600401808060200182810382526024815260200180611c2c6024913960400191505060405180910390fd5b6001600160a01b0382166116165760405162461bcd60e51b8152600401808060200182810382526022815260200180611b2e6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b60008082116116ce576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816116d757fe5b049392505050565b600082820183811015611739576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600082821115611797576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000818484111561182c5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117f15781810151838201526020016117d9565b50505050905090810190601f16801561181e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b0383166118795760405162461bcd60e51b8152600401808060200182810382526025815260200180611be06025913960400191505060405180910390fd5b6001600160a01b0382166118be5760405162461bcd60e51b8152600401808060200182810382526023815260200180611b0b6023913960400191505060405180910390fd5b6118c9838383611a7f565b61190681604051806060016040528060268152602001611b50602691396001600160a01b038616600090815260208190526040902054919061179d565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461193590826116df565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6001600160a01b0382166119ea576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6119f660008383611a7f565b600254611a0390826116df565b6002556001600160a01b038216600090815260208190526040902054611a2990826116df565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b611a8a838383611b05565b6001600160a01b038316611b0557611aa0610a35565b611ab282611aac61078c565b906116df565b1115611b05576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657263616c6c6572206973206e6f74206d696e746572206f72206e6f7420656e6f75676845524332303a207472616e736665722066726f6d20746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f74207468652070656e64696e674f776e657245524332303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a2070656e64696e674f776e657220697320746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122048e49fbb1266132af81025cdee0e9b6c629380e46f9d8fb357c4be6519e5a94264736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 444,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 450,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 452,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 454,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 456,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 458,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_decimals",
        "offset": 0,
        "slot": "5",
        "type": "t_uint8"
      },
      {
        "astId": 941,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_cap",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1837,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_owner",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 1839,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 3037,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "totalBurnAmount",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 3039,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "swapPool",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 3043,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "minters",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3047,
        "contract": "contracts/token/AthenaToken.sol:AthenaToken",
        "label": "whitelist",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}